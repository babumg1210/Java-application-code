# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: JavaBuild
        steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.11'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'package'
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/target'  # The directory where your Maven builds the JAR/WAR
            Contents: '**/*.jar'  # You can also use *.war or specific file names if needed
            TargetFolder: '$(Build.ArtifactStagingDirectory)/app'  # The directory where files are copied (staging for artifacts)

        # Step 3: Publish Build Artifacts (JAR/WAR files)
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/app'  # The path where the JAR file is copied
            ArtifactName: 'drop'  # Name of the artifact (can be anything, like 'build-output')
            publishLocation: 'Container'  # Store the artifact in the Azure DevOps pipeline container